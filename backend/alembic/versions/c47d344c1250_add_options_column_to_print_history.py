"""add_options_column_to_print_history

Revision ID: c47d344c1250
Revises: e01ebd2a1fa7
Create Date: 2025-07-10 21:59:32.521025

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c47d344c1250"
down_revision: Union[str, None] = "e01ebd2a1fa7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, "api_keys", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(None, "api_keys", "users", ["created_by"], ["id"])
    op.create_foreign_key(
        None, "asset_communications", "asset_interfaces", ["src_interface_id"], ["id"]
    )
    op.create_foreign_key(
        None, "asset_communications", "asset_interfaces", ["dst_interface_id"], ["id"]
    )
    op.create_foreign_key(
        None, "asset_connections", "assets", ["parent_asset_id"], ["id"]
    )
    op.create_foreign_key(
        None, "asset_connections", "asset_interfaces", ["remote_interface_id"], ["id"]
    )
    op.create_foreign_key(
        None, "asset_connections", "asset_interfaces", ["local_interface_id"], ["id"]
    )
    op.create_foreign_key(
        None, "asset_connections", "assets", ["child_asset_id"], ["id"]
    )
    op.create_foreign_key(None, "asset_connections", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(
        None, "asset_contacts", "contacts", ["contact_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "asset_contacts", "assets", ["asset_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "asset_interfaces", "assets", ["asset_id"], ["id"])
    op.create_foreign_key(None, "asset_statuses", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(None, "asset_types", "tenants", ["tenant_id"], ["id"])
    op.create_index(
        op.f("ix_assets_manufacturer_id"), "assets", ["manufacturer_id"], unique=False
    )
    op.create_foreign_key(None, "assets", "asset_types", ["asset_type_id"], ["id"])
    op.create_foreign_key(None, "assets", "asset_statuses", ["status_id"], ["id"])
    op.create_foreign_key(None, "assets", "manufacturers", ["manufacturer_id"], ["id"])
    op.create_foreign_key(None, "assets", "locations", ["location_id"], ["id"])
    op.create_foreign_key(None, "assets", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(None, "assets", "sites", ["site_id"], ["id"])
    op.create_foreign_key(None, "audit_logs", "users", ["user_id"], ["id"])
    op.create_index(
        op.f("ix_contacts_tenant_id"), "contacts", ["tenant_id"], unique=False
    )
    op.create_foreign_key(None, "contacts", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(
        None,
        "location_contacts",
        "contacts",
        ["contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "location_contacts",
        "locations",
        ["location_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint(None, "location_floorplans", ["location_id"])
    op.create_foreign_key(
        None, "location_floorplans", "locations", ["location_id"], ["id"]
    )
    op.create_foreign_key(None, "locations", "sites", ["site_id"], ["id"])
    op.create_foreign_key(None, "locations", "tenants", ["tenant_id"], ["id"])
    op.create_index(
        op.f("ix_manufacturers_tenant_id"), "manufacturers", ["tenant_id"], unique=False
    )
    op.create_unique_constraint(None, "manufacturers", ["id"])
    op.add_column("print_history", sa.Column("options", sa.JSON(), nullable=True))
    op.alter_column(
        "print_history",
        "generated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "print_history", "file_path", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "print_history",
        "file_size",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=True,
    )
    op.alter_column(
        "print_history", "generated_by", existing_type=sa.UUID(), nullable=True
    )
    op.create_foreign_key(None, "print_history", "assets", ["asset_id"], ["id"])
    op.create_foreign_key(
        None, "print_history", "print_templates", ["template_id"], ["id"]
    )
    op.create_foreign_key(None, "print_history", "users", ["generated_by"], ["id"])
    op.drop_column("print_history", "tenant_id")
    op.drop_constraint("print_templates_key_key", "print_templates", type_="unique")
    op.create_index(
        op.f("ix_print_templates_id"), "print_templates", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_print_templates_key"), "print_templates", ["key"], unique=True
    )
    op.create_index(
        op.f("ix_print_templates_tenant_id"),
        "print_templates",
        ["tenant_id"],
        unique=False,
    )
    op.create_foreign_key(None, "print_templates", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(
        None, "site_contacts", "sites", ["site_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "site_contacts", "contacts", ["contact_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(None, "sites", "tenants", ["tenant_id"], ["id"])
    op.create_foreign_key(None, "sites", "sites", ["parent_id"], ["id"])
    op.create_foreign_key(
        None,
        "supplier_contacts",
        "suppliers",
        ["supplier_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "supplier_contacts",
        "contacts",
        ["contact_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_index(
        op.f("ix_supplier_documents_tenant_id"),
        "supplier_documents",
        ["tenant_id"],
        unique=False,
    )
    op.create_foreign_key(
        None,
        "supplier_documents",
        "suppliers",
        ["supplier_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_index(
        op.f("ix_suppliers_tenant_id"), "suppliers", ["tenant_id"], unique=False
    )
    op.alter_column(
        "tenant_smtp_config",
        "username",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
    )
    op.alter_column(
        "tenant_smtp_config",
        "password",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
    )
    op.create_unique_constraint(None, "tenant_smtp_config", ["tenant_id"])
    op.create_foreign_key(None, "tenant_smtp_config", "tenants", ["tenant_id"], ["id"])
    op.drop_column("tenant_smtp_config", "updated_at")
    op.drop_column("tenant_smtp_config", "created_at")
    op.create_foreign_key(None, "users", "roles", ["role_id"], ["id"])
    op.create_foreign_key(None, "users", "tenants", ["tenant_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_constraint(None, "users", type_="foreignkey")
    op.add_column(
        "tenant_smtp_config",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "tenant_smtp_config",
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "tenant_smtp_config", type_="foreignkey")
    op.drop_constraint(None, "tenant_smtp_config", type_="unique")
    op.alter_column(
        "tenant_smtp_config",
        "password",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
    )
    op.alter_column(
        "tenant_smtp_config",
        "username",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
    )
    op.drop_index(op.f("ix_suppliers_tenant_id"), table_name="suppliers")
    op.drop_constraint(None, "supplier_documents", type_="foreignkey")
    op.drop_index(
        op.f("ix_supplier_documents_tenant_id"), table_name="supplier_documents"
    )
    op.drop_constraint(None, "supplier_contacts", type_="foreignkey")
    op.drop_constraint(None, "supplier_contacts", type_="foreignkey")
    op.drop_constraint(None, "sites", type_="foreignkey")
    op.drop_constraint(None, "sites", type_="foreignkey")
    op.drop_constraint(None, "site_contacts", type_="foreignkey")
    op.drop_constraint(None, "site_contacts", type_="foreignkey")
    op.drop_constraint(None, "print_templates", type_="foreignkey")
    op.drop_index(op.f("ix_print_templates_tenant_id"), table_name="print_templates")
    op.drop_index(op.f("ix_print_templates_key"), table_name="print_templates")
    op.drop_index(op.f("ix_print_templates_id"), table_name="print_templates")
    op.create_unique_constraint("print_templates_key_key", "print_templates", ["key"])
    op.add_column(
        "print_history",
        sa.Column("tenant_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "print_history", type_="foreignkey")
    op.drop_constraint(None, "print_history", type_="foreignkey")
    op.drop_constraint(None, "print_history", type_="foreignkey")
    op.alter_column(
        "print_history", "generated_by", existing_type=sa.UUID(), nullable=False
    )
    op.alter_column(
        "print_history",
        "file_size",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "print_history", "file_path", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "print_history",
        "generated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_column("print_history", "options")
    op.drop_constraint(None, "manufacturers", type_="unique")
    op.drop_index(op.f("ix_manufacturers_tenant_id"), table_name="manufacturers")
    op.drop_constraint(None, "locations", type_="foreignkey")
    op.drop_constraint(None, "locations", type_="foreignkey")
    op.drop_constraint(None, "location_floorplans", type_="foreignkey")
    op.drop_constraint(None, "location_floorplans", type_="unique")
    op.drop_constraint(None, "location_contacts", type_="foreignkey")
    op.drop_constraint(None, "location_contacts", type_="foreignkey")
    op.drop_constraint(None, "contacts", type_="foreignkey")
    op.drop_index(op.f("ix_contacts_tenant_id"), table_name="contacts")
    op.drop_constraint(None, "audit_logs", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_constraint(None, "assets", type_="foreignkey")
    op.drop_index(op.f("ix_assets_manufacturer_id"), table_name="assets")
    op.drop_constraint(None, "asset_types", type_="foreignkey")
    op.drop_constraint(None, "asset_statuses", type_="foreignkey")
    op.drop_constraint(None, "asset_interfaces", type_="foreignkey")
    op.drop_constraint(None, "asset_contacts", type_="foreignkey")
    op.drop_constraint(None, "asset_contacts", type_="foreignkey")
    op.drop_constraint(None, "asset_connections", type_="foreignkey")
    op.drop_constraint(None, "asset_connections", type_="foreignkey")
    op.drop_constraint(None, "asset_connections", type_="foreignkey")
    op.drop_constraint(None, "asset_connections", type_="foreignkey")
    op.drop_constraint(None, "asset_connections", type_="foreignkey")
    op.drop_constraint(None, "asset_communications", type_="foreignkey")
    op.drop_constraint(None, "asset_communications", type_="foreignkey")
    op.drop_constraint(None, "api_keys", type_="foreignkey")
    op.drop_constraint(None, "api_keys", type_="foreignkey")
    # ### end Alembic commands ###
